name: Terraform Pipeline (Plan on push, Apply manual)

concurrency:
  group: terraform-dev              # 同時実行を禁止（state壊れ防止）
  cancel-in-progress: false

on:
  push:
    branches: [ main ]                          # mainへのpushで自動Plan
    paths:    [ 'terraform/**' ]
  pull_request:
    branches: [ main ]                          # PRでもPlan（レビュー用）
    paths:    [ 'terraform/**' ]
  workflow_dispatch:                             # 手動実行（Apply用）

permissions:
  id-token: write                                # OIDCに必須
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/env/dev

    steps:
      - uses: actions/checkout@v4

      # OIDCでAWS認証
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::585008043652:role/github-actions-deploy-role
          aws-region: ap-northeast-1

      # 既存tfstateをArtifactsから取得（初回は無くてもOK）
      - name: Download tfstate artifact (dev)
        uses: actions/download-artifact@v4
        with:
          name: terraform-state-dev       # ← 任意だが固定名にする
          path: terraform/env/dev         # ← working-directory と同じ
        continue-on-error: true           # 初回は存在しないのでOK

      - name: Terraform Init
        run: terraform init -input=false

      # 余計な tfvars を消してから毎回作り直す
      - name: Clean previous tfvars
        run: rm -f *.tfvars *.auto.tfvars || true

      # dev.auto.tfvars を作成（base64デコード版）
      - name: Write tfvars from secret (dev, base64)
        run: |
          rm -f dev.auto.tfvars || true
          printf "%s" "${{ secrets.TFVARS_DEV_B64 }}" | base64 -d > dev.auto.tfvars

      # --- 自動で実行されるのは Plan まで ---
      - name: Terraform Plan
        env:
          TF_IN_AUTOMATION: "true"   # CIでの実行を明示
          TF_INPUT: "false"          # 念のため環境変数でも無効化
        run: terraform plan -input=false -no-color -out=tfplan -var-file=./dev.auto.tfvars

      # Plan結果をアーティファクトとして保存
      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      # --- Apply は workflow_dispatch で手動実行したときだけ ---
      - name: Terraform Apply (manual only)
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve tfplan

      # tfstate をArtifactsへ保存（存在しない場合は警告のみ）
      - name: Upload tfstate artifact (dev)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state-dev
          path: |
            terraform/env/dev/terraform.tfstate
            terraform/env/dev/terraform.tfstate.backup
          retention-days: 90       # デフォルト90。必要に応じて調整
          if-no-files-found: warn  # 無ければ警告のみ